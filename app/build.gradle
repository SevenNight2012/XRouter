apply plugin: 'com.android.application'
apply plugin: "com.mrcd.xrouter.auto"

boolean isPublishPlugin = rootProject.publishPlugin.toBoolean()

def config=rootProject.ext

android {
    compileSdkVersion config.compileSdkVersion

    defaultConfig {
        applicationId "com.mrcd.xrouter.demo"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [MODULE_PATH: project.projectDir.absolutePath]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        encoding = "UTF-8"
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    if (isPublishPlugin) {
        implementation "com.mrcd:xrouter-annotation-x:${ANNOTATION_VERSION_NAME}"
        annotationProcessor "com.mrcd:xrouter-compiler-x:${COMPILER_VERSION_NAME}"
    } else {
        implementation project(":xrouter-annotation")
        annotationProcessor project(":xrouter-compiler")
    }

    implementation project(path: ':routers')
    implementation project(path: ':demo')
}
