apply plugin: 'com.android.library'
boolean isPublishPlugin = rootProject.publishPlugin.toBoolean()
println "publish >> " + isPublishPlugin

apply plugin: 'com.mrcd.xrouter.engine'
XRouterConfig {
    routerPath = "com.xxc.xrouter.routers"
//    customRouterLauncher = "AppRouter"
}

def config = rootProject.ext

android {
    compileSdkVersion config.compileSdkVersion

    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    if (isPublishPlugin) {
        api "com.mrcd:xrouter-api-x:${API_VERSION_NAME}"
        implementation "com.mrcd:xrouter-annotation-x:${ANNOTATION_VERSION_NAME}"
    } else {
        api project(":xrouter-api")
        implementation project(":xrouter-annotation")
    }

}
